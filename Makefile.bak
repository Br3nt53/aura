.DEFAULT_GOAL := eval-fast
.PHONY: setup eval-fast clean-fast

# Paths & defaults
PY := .venv/bin/python
SCENARIO ?= scenarios/crossing_targets.yaml
PARAMS   ?= configs/default.yaml
OUT      ?= out/tmp

setup: ## Create venv and install minimal deps

	@command -v python3 >/dev/null || { echo "python3 not found"; exit 1; }
	@test -x .venv/bin/python || python3 -m venv .venv
	@$(PY) -m pip -q install --upgrade pip >/dev/null
	@$(PY) -m pip -q install pandas motmetrics pytest pyyaml >/dev/null || true
	@echo "[make] setup complete"

eval-fast: setup ## Run AURA evaluator fast-path (no ROS)
	@echo "[make] Running AURA evaluator fast-path (SKIP_ROS=1, USE_AURA_EVALUATOR=1)"
	@USE_AURA_EVALUATOR=1 SKIP_ROS=1 $(PY) tools/run_single.py \
		--scenario $(SCENARIO) \
		--params   $(PARAMS) \
		--out-dir  $(OUT)
	@echo "[make] Done. Metrics at $(OUT)/metrics.json"
	@head -n 20 $(OUT)/metrics.json || true

clean-fast: ## Remove out/tmp

	@echo "[make] Cleaning fast eval outputs ($(OUT))"
	@rm -rf $(OUT) && mkdir -p $(OUT)
	@echo "[make] Clean complete."

# ==== Fast AURA eval without ROS (venv + deps) ====
PY := $(shell [ -x .venv/bin/python ] && echo .venv/bin/python || echo python3)
SCENARIO ?= scenarios/crossing_targets.yaml
PARAMS   ?= configs/default.yaml
OUT      ?= out/tmp

# --- Synthetic sample (no downloads) ---
sample-setup:
	@echo "[make] Creating tiny sample MOT JSONL gt/predâ€¦"
	@.venv/bin/python tools/create_sample_mot_jsonl.py

eval-sample: setup ## Generate tiny sample gt/pred and evaluate
	@echo "[make] Creating tiny sample MOT JSONL gt/predâ€¦"
	@tools/create_sample_mot_jsonl.py
	@echo "[make] Evaluating sample with AURA evaluator (no ROS)â€¦"
	@USE_AURA_EVALUATOR=1 SKIP_ROS=1 $(PY) tools/run_single.py \
		--scenario $(SCENARIO) \
		--params   $(PARAMS) \
		--out-dir  out/sample-mot
	@echo "[make] Metrics at out/sample-mot/metrics.json"
	@head -n 20 out/sample-mot/metrics.json || true

clean-sample: ## Remove out/sample-mot

	@rm -rf out/sample-mot && echo "[make] Cleaned out/sample-mot"

# --- MOT17-style local directory (uses data/mot17-mini) ---
MOT_DIR ?= data/mot17-mini
eval-mot17: setup ## Convert MOT-style dir to JSONL and evaluate
	@echo "[make] Converting MOT -> JSONL â€¦"
	@.venv/bin/python tools/convert_mot_to_jsonl.py --data-root $(MOT_DIR) --out-dir out/mot17-mini
	@echo "[make] Evaluating MOT17-mini with AURA evaluator (no ROS)â€¦"
	@USE_AURA_EVALUATOR=1 SKIP_ROS=1 .venv/bin/python tools/run_single.py \
		--scenario $(SCENARIO) \
		--params   $(PARAMS) \
		--out-dir  out/mot17-mini
	@echo "[make] Metrics at out/mot17-mini/metrics.json"
	@head -n 30 out/mot17-mini/metrics.json || true

clean-mot17: ## Remove out/mot17-mini

	@rm -rf out/mot17-mini && echo "[make] Cleaned out/mot17-mini"

# Keep your existing eval-fast/clean-fast if already present

# --- KITTI-style local directory (uses data/kitti-mini) ---
KITTI_DIR ?= data/kitti-mini

eval-kitti: setup ## Convert KITTI label file to JSONL and evaluate
	@echo "[make] Converting KITTI -> JSONL â€¦"
	@.venv/bin/python tools/convert_kitti_to_jsonl.py --labels $(KITTI_DIR)/label_02/0000.txt --out out/kitti-mini/gt.jsonl
	@echo "[make] Evaluating KITTI-mini with AURA evaluator (no ROS)â€¦"
	@USE_AURA_EVALUATOR=1 SKIP_ROS=1 $(PY) tools/run_single.py \
		--scenario $(SCENARIO) \
		--params   $(PARAMS) \
		--out-dir  out/kitti-mini
	@echo "[make] Metrics at out/kitti-mini/metrics.json"
	@head -n 30 out/kitti-mini/metrics.json || true

clean-kitti: ## Remove out/kitti-mini

	@rm -rf out/kitti-mini && echo "[make] Cleaned out/kitti-mini"

.PHONY: help setup eval-fast clean-fast eval-sample clean-sample eval-mot17 clean-mot17 eval-kitti clean-kitti

help: ## Show this help
	@grep -E '^[a-zA-Z0-9_.-]+:.*?## ' Makefile | awk 'BEGIN{FS=":.*?## "}{printf "[36m%-16s[0m %s
", $1, $2}'

	@grep -E '^[a-zA-Z0-9_.-]+:.*?## ' Makefile | awk 'BEGIN{FS":.*?## "}{printf "\033[36m%-18s\033[0m %s\n", $$1, $$2}'
