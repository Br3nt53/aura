name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  python-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          python -m pip install pytest ruff black mypy pandas motmetrics pyyaml

      - name: Run unified checks
        env:
          AURA_CI_NO_SMOKE: "0"
          AURA_CI_STRICT_SMOKE: "0"
        run: python .github/scripts/ci_checks.py

  docker_smoke:
    runs-on: ubuntu-latest
    needs: [python-ci]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t aura-ci .

      - name: Smoke run (ROS inside container, non-fatal if ROS env not present)
        run: |
          set -euo pipefail
          docker run --rm aura-ci /bin/bash -lc '
            set -e
            if [ -f "/opt/ros/humble/setup.bash" ]; then . /opt/ros/humble/setup.bash; fi
            if [ -f "ros2_ws/install/local_setup.bash" ]; then . ros2_ws/install/local_setup.bash; fi

            mkdir -p out/tmp
            python3 tools/run_single.py \
              --scenario scenarios/crossing_targets.yaml \
              --out out/tmp/metrics.json || true

            python3 - <<PY
import json, sys, pathlib
p = pathlib.Path("out/tmp/metrics.json")
if not p.exists():
    print("[SMOKE][WARN] metrics.json not produced inside container")
    sys.exit(0)
try:
    m = json.load(p.open())
    print("[SMOKE] metrics keys:", list(m.keys()))
except Exception as e:
    print("[SMOKE][WARN] could not parse metrics.json:", e)
PY
          '
