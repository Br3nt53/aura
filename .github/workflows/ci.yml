name: CI
on:
  push: { branches: [ main ] }
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
<<<<<<< HEAD
        with: { python-version: '3.11' }
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest ruff black mypy
=======
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          python -m pip install pytest ruff black mypy
>>>>>>> 725d9b9 (chore: cleanup workspace; single-source ROS pkg; tooling + lint fixes)
      - name: Lint
        run: |
          ruff check .
          black --check .
          mypy --ignore-missing-imports .
<<<<<<< HEAD
      - name: Smoke test (runner)
        run: |
          python tools/run_single.py --scenario scenarios/crossing_targets.yaml --out out/tmp/metrics.json || true
          test -f out/tmp/metrics.json && python - <<'PY'
import json, sys
m=json.load(open("out/tmp/metrics.json"))
assert 0.0 <= m.get("auc", 0.0) <= 1.0
print("AUC OK:", m.get("auc"))
=======
      - name: Pytests
        run: pytest -q
      - name: Smoke (optional)
        run: |
          python tools/run_single.py --scenario scenarios/crossing_targets.yaml --out out/tmp/metrics.json || true
          test -f out/tmp/metrics.json && python - <<'PY'
import json; m=json.load(open("out/tmp/metrics.json")); print("AUC:", m.get("auc"))
>>>>>>> 725d9b9 (chore: cleanup workspace; single-source ROS pkg; tooling + lint fixes)
PY
